{"version":3,"sources":["routes.ts","components/Header.tsx","containers/Counter.tsx","actions/employees.ts","containers/Employees/Pagination.tsx","containers/Employees/CreateEmployeeModal.tsx","containers/Employees/CreateEmployee.tsx","hooks/usePrevious.tsx","containers/Employees/index.tsx","App.tsx","reportWebVitals.js","reducers/employees.ts","reducers/index.ts","api/request.ts","api/domain.ts","api/index.ts","sagas/employees.ts","sagas/index.ts","store.ts","index.tsx"],"names":["ROUTES","Header","history","useHistory","className","Button","onClick","push","Counter","useState","count","setCount","GET_EMPLOYEES_START","GET_EMPLOYEES_SUCCESS","GET_EMPLOYEES_FAIL","CREATE_EMPLOYEE_START","CREATE_EMPLOYEE_SUCCESS","CREATE_EMPLOYEE_FAIL","getEmployeesStart","payload","type","Pagination","dispatch","useDispatch","currentPage","setCurrentPage","firstUpdate","useRef","useEffect","current","page","Math","max","validation","val","length","CreateEmployeeModal","onClose","name","setName","email","setEmail","position","setPosition","loadingCreate","useSelector","state","employees","shallowEqual","onChangeInput","setValue","e","target","value","handleClose","isErrorName","isErrorEmail","isErrorPosition","Dialog","maxWidth","open","DialogTitle","DialogContent","dividers","FormControl","fullWidth","error","InputLabel","htmlFor","Input","id","onChange","bind","FormHelperText","DialogActions","disabled","CreateEmployee","enqueueSnackbar","useSnackbar","isOpenModal","setIsOpenModal","errorCreate","prevLoadingCreate","ref","usePrevious","variant","Employees","loading","getEmployeesCb","useCallback","renderEmployees","useMemo","Array","map","i","colSpan","App","maxSnack","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","data","reducers","combineReducers","fetchAPI","url","method","fetch","body","JSON","stringify","res","ok","Error","status","json","response","catch","message","domain","EMPLOYEE","limit","env","getEmployees","createEmployee","employeeWatcher","call","put","takeLatest","actionWatcher","all","employeesWatcher","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32611237.chunk.js","sourcesContent":["export const ROUTES = {\n  COUNTER: \"/counter\",\n  EMPLOYEES: \"/employees\",\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { ROUTES } from \"../routes\";\n\nconst Header = () => {\n  const history = useHistory();\n\n  const onClickCounter = () => {\n    history.push(ROUTES.COUNTER);\n  };\n\n  const onClickEmployees = () => {\n    history.push(ROUTES.EMPLOYEES);\n  };\n\n  return (\n    <div className='header'>\n      <Button onClick={onClickCounter}>Counter</Button>\n      <Button onClick={onClickEmployees}>Employees</Button>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Counter: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  const onIncrease = () => {\n    setCount(count + 1);\n  };\n\n  const onReset = () => {\n    setCount(0);\n  };\n\n  return (\n    <div className=\"counter\">\n      <div className='btn-counter'>\n        <Button onClick={onIncrease}>Increase</Button>\n        <Button onClick={onReset}>Reset</Button>\n      </div>\n      <div className='count'>{count}</div>\n    </div>\n  );\n};\n\nexport default Counter;\n","const GET_EMPLOYEES_START = \"GET_EMPLOYEES_START\";\nconst GET_EMPLOYEES_SUCCESS = \"GET_EMPLOYEES_SUCCESS\";\nconst GET_EMPLOYEES_FAIL = \"GET_EMPLOYEES_FAIL\";\n\nconst CREATE_EMPLOYEE_START = \"CREATE_EMPLOYEE_START\";\nconst CREATE_EMPLOYEE_SUCCESS = \"CREATE_EMPLOYEE_SUCCESS\";\nconst CREATE_EMPLOYEE_FAIL = \"CREATE_EMPLOYEE_FAIL\";\n\nexport const getEmployeesStart = (payload: {\n  page?: number;\n  limit?: number;\n}) => ({\n  type: GET_EMPLOYEES_START,\n  payload,\n});\n\nexport const createEmployeesStart = (payload: {\n  name?: string | null;\n  email?: string | null;\n  position?: string | null;\n}) => ({\n  type: CREATE_EMPLOYEE_START,\n  payload,\n});\n\nexport {\n  GET_EMPLOYEES_START,\n  GET_EMPLOYEES_SUCCESS,\n  GET_EMPLOYEES_FAIL,\n  CREATE_EMPLOYEE_START,\n  CREATE_EMPLOYEE_SUCCESS,\n  CREATE_EMPLOYEE_FAIL,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { getEmployeesStart } from \"../../actions/employees\";\n\nconst Pagination: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstUpdate = useRef(true);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    dispatch(getEmployeesStart({ page: currentPage }));\n  }, [currentPage]);\n\n  const onPrevious = () => {\n    setCurrentPage(Math.max(currentPage - 1, 1));\n  };\n\n  const onNext = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  return (\n    <div className=\"pagination\">\n      <span\n        className={`${currentPage === 1 ? \"btn-disabled\" : \"\"} btn-previous`}\n        onClick={onPrevious}>\n        Previous\n      </span>\n      <span>{currentPage}</span>\n      <span className=\"btn-next\" onClick={onNext}>\n        Next\n      </span>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport { RootState } from \"../../store\";\nimport { createEmployeesStart } from \"../../actions/employees\";\n\nconst validation: any = {\n  name: (val: string) => {\n    if (val !== null && !val.length) {\n      return \"Required\";\n    }\n    return null;\n  },\n  email: (val: string) => {\n    if (val !== null && !val.length) {\n      return \"Required\";\n    }\n    return null;\n  },\n  position: (val: string) => {\n    if (val !== null && !val.length) {\n      return \"Required\";\n    }\n    return null;\n  },\n};\n\nconst CreateEmployeeModal: React.FC<{ onClose: () => void }> = ({\n  onClose,\n}) => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [position, setPosition] = useState(null);\n\n  const { loadingCreate } = useSelector(\n    (state: RootState) => state.employees,\n    shallowEqual\n  );\n\n  const onChangeInput = (\n    setValue: any,\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setValue(e.target.value);\n  };\n\n  const onSave = () => {\n    dispatch(createEmployeesStart({ name, email, position }));\n  };\n\n  const handleClose = () => {\n    !!onClose && onClose();\n  };\n\n  const isErrorName = validation.name(name);\n  const isErrorEmail = validation.email(email);\n  const isErrorPosition = validation.position(position);\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"max-width-dialog-title\"\n      maxWidth=\"xs\"\n      open>\n      <DialogTitle>Set backup account</DialogTitle>\n      <DialogContent dividers>\n        <FormControl fullWidth error={!!isErrorName}>\n          <InputLabel htmlFor=\"field-name\">Name</InputLabel>\n          <Input\n            id=\"field-name\"\n            name=\"name\"\n            value={name}\n            onChange={onChangeInput.bind(this, setName)}\n            aria-describedby=\"field-name-text\"\n          />\n          <FormHelperText id=\"field-name-text\">{isErrorName}</FormHelperText>\n        </FormControl>\n        <FormControl fullWidth error={!!isErrorEmail}>\n          <InputLabel htmlFor=\"field-email\">Email</InputLabel>\n          <Input\n            id=\"field-email\"\n            name=\"email\"\n            value={email}\n            onChange={onChangeInput.bind(this, setEmail)}\n            aria-describedby=\"field-email-text\"\n          />\n          <FormHelperText id=\"field-email-text\">{isErrorEmail}</FormHelperText>\n        </FormControl>\n        <FormControl fullWidth error={!!isErrorPosition}>\n          <InputLabel htmlFor=\"field-position\">Position</InputLabel>\n          <Input\n            id=\"field-position\"\n            name=\"position\"\n            value={position}\n            onChange={onChangeInput.bind(this, setPosition)}\n            aria-describedby=\"field-position-text\"\n          />\n          <FormHelperText id=\"field-position-text\">\n            {isErrorPosition}\n          </FormHelperText>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button\n          onClick={onSave}\n          disabled={\n            loadingCreate || isErrorName || isErrorEmail || isErrorPosition\n          }>\n          Save changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CreateEmployeeModal;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\n\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { RootState } from \"../../store\";\n\nimport CreateEmployeeModal from \"./CreateEmployeeModal\";\n\nconst CreateEmployee: React.FC = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const { loadingCreate, errorCreate } = useSelector(\n    (state: RootState) => state.employees,\n    shallowEqual\n  );\n\n  const prevLoadingCreate = usePrevious(loadingCreate);\n\n  useEffect(() => {\n    if (prevLoadingCreate && !loadingCreate) {\n      if (!!errorCreate) {\n        enqueueSnackbar(\"Something went wrong\", { variant: \"error\" });\n      } else {\n        enqueueSnackbar(\"Created a employee\", { variant: \"success\" });\n        onClose();\n      }\n    }\n  }, [loadingCreate]);\n\n  const onOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const onClose = () => {\n    setIsOpenModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"btn-new\" onClick={onOpen}>\n        + New\n      </div>\n      {isOpenModal && <CreateEmployeeModal onClose={onClose} />}\n    </>\n  );\n};\n\nexport default CreateEmployee;\n","import { useRef, useEffect } from \"react\";\n\nexport default function usePrevious(value: any) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useCallback } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport { RootState } from \"../../store\";\nimport { Employee } from \"../../models/employees\";\n\nimport { getEmployeesStart } from \"../../actions/employees\";\n\nimport Pagination from \"./Pagination\";\nimport CreateEmployee from \"./CreateEmployee\";\n\nconst Employees: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { loading, employees } = useSelector(\n    (state: RootState) => state.employees,\n    shallowEqual\n  );\n\n  const getEmployeesCb = useCallback(() => {\n    dispatch(getEmployeesStart({ page: 1 }));\n  }, [dispatch]);\n\n  useEffect(() => {\n    getEmployeesCb();\n  }, []);\n\n  const renderEmployees = useMemo(() => {\n    if (loading) {\n      return [...Array(5)].map((e: number, i: number) => (\n        <tr key={e}>\n          <td>\n            <div className=\"skeleton\" />\n          </td>\n          <td>\n            <div className=\"skeleton\" />\n          </td>\n          <td>\n            <div className=\"skeleton\" />\n          </td>\n        </tr>\n      ));\n    }\n    if (!employees.length) {\n      return (\n        <tr>\n          <td className=\"no-data\" colSpan={3}>\n            No data\n          </td>\n        </tr>\n      );\n    }\n    return employees.map((e: Employee, i: number) => (\n      <tr key={e.id}>\n        <td>{e.name}</td>\n        <td>{e.email}</td>\n        <td>{e.position}</td>\n      </tr>\n    ));\n  }, [loading, employees]);\n\n  return (\n    <div className=\"employees\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Position</th>\n          </tr>\n        </thead>\n        <tbody>{renderEmployees}</tbody>\n        <tfoot>\n          <tr>\n            <td colSpan={3}>\n              <CreateEmployee />\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n      <Pagination />\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport \"./App.css\";\n\nimport { ROUTES } from \"./routes\";\n\nimport Header from \"./components/Header\";\nimport Counter from \"./containers/Counter\";\nimport Employees from \"./containers/Employees/index\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <SnackbarProvider maxSnack={3}>\n        <div className=\"container\">\n          <Header />\n          <Switch>\n            <Route path={`(${ROUTES.COUNTER}|/)`}>\n              <Counter />\n            </Route>\n            <Route path={ROUTES.EMPLOYEES}>\n              <Employees />\n            </Route>\n          </Switch>\n        </div>\n      </SnackbarProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AnyAction } from \"redux\";\n\nimport {\n  GET_EMPLOYEES_START,\n  GET_EMPLOYEES_SUCCESS,\n  GET_EMPLOYEES_FAIL,\n  CREATE_EMPLOYEE_START,\n  CREATE_EMPLOYEE_SUCCESS,\n  CREATE_EMPLOYEE_FAIL,\n} from \"../actions/employees\";\n\ntype TState = {\n  loading: boolean;\n  employees: any;\n  error: any;\n\n  loadingCreate: boolean;\n  errorCreate: any;\n};\n\nconst initialState: TState = {\n  loading: false,\n  employees: [],\n  error: null,\n\n  loadingCreate: false,\n  errorCreate: null,\n};\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_EMPLOYEES_START:\n      return { ...state, loading: true };\n    case GET_EMPLOYEES_SUCCESS:\n      return { ...state, loading: false, employees: action.data };\n    case GET_EMPLOYEES_FAIL:\n      return { ...state, loading: false, error: action.error };\n\n    case CREATE_EMPLOYEE_START:\n      return { ...state, loadingCreate: true };\n    case CREATE_EMPLOYEE_SUCCESS:\n      return { ...state, loadingCreate: false };\n    case CREATE_EMPLOYEE_FAIL:\n      return { ...state, loadingCreate: false, errorCreate: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\n\nimport employees from \"./employees\";\n\nconst reducers = combineReducers({\n  employees,\n});\n\nexport default reducers;\n","type TPayload = {\n  params?: Object;\n  body?: Object;\n};\n\ntype TRequest = {\n  url: string;\n  method?: string;\n  payload?: TPayload;\n};\n\nconst fetchAPI = ({ url, method = \"GET\", payload = {} }: TRequest) =>\n  fetch(url, {\n    method,\n    body: JSON.stringify(payload.body),\n  })\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(`${res.status}`);\n      }\n      return res.json();\n    })\n    .then((response) => ({ response }))\n    .catch((error) => ({ error: error.message }));\n\nexport type { TRequest };\n\nexport default fetchAPI;\n","// import dotEnv from \"dotenv\";\n\nconst domain = \"https://60f68a6518254c00176e02fe.mockapi.io\";\n\nexport default domain;\n","import env from \"./domain\";\n\nconst EMPLOYEE = {\n  GET_EMPLOYEES: (page: number, limit: number = 5): string =>\n    `${env}/users/getUsers?page=${page}&limit=${limit}`,\n  CREATE_EMPLOYEE: (): string => `${env}/users/getUsers`,\n};\n\nexport { EMPLOYEE };\n","import { takeLatest, call, put } from \"redux-saga/effects\";\n\nimport fetchAPI from \"../api/request\";\n\nimport { EMPLOYEE } from \"../api\";\n\nimport {\n  GET_EMPLOYEES_START,\n  GET_EMPLOYEES_SUCCESS,\n  GET_EMPLOYEES_FAIL,\n  CREATE_EMPLOYEE_START,\n  CREATE_EMPLOYEE_SUCCESS,\n  CREATE_EMPLOYEE_FAIL,\n} from \"../actions/employees\";\n\nfunction* getEmployees(action: any) {\n  const { response, error } = yield call(fetchAPI, {\n    url: EMPLOYEE.GET_EMPLOYEES(action.payload.page),\n  });\n  if (response) {\n    yield put({ type: GET_EMPLOYEES_SUCCESS, data: response });\n  } else {\n    yield put({ type: GET_EMPLOYEES_FAIL, error: +error });\n  }\n}\n\nfunction* createEmployee(action: any) {\n  const { response, error } = yield call(fetchAPI, {\n    url: EMPLOYEE.CREATE_EMPLOYEE(),\n    method: \"POST\",\n    payload: { body: action.payload },\n  });\n  if (response) {\n    yield put({ type: CREATE_EMPLOYEE_SUCCESS, data: response });\n  } else {\n    yield put({ type: CREATE_EMPLOYEE_FAIL, error: +error });\n  }\n}\n\nexport default function* employeeWatcher() {\n  yield takeLatest(GET_EMPLOYEES_START, getEmployees);\n  yield takeLatest(CREATE_EMPLOYEE_START, createEmployee);\n}\n","import { all } from \"redux-saga/effects\";\n\nimport employeesWatcher from \"./employees\";\n\nexport default function* actionWatcher() {\n  yield all([employeesWatcher()]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport \"./index.css\";\nimport reducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}